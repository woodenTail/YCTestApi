{
  "uid" : "a94d86007ca4503c",
  "name" : "获取商品接口",
  "fullName" : "keywords.test_run#test_run",
  "historyId" : "fd12443521722289fa2338603cc586b8",
  "time" : {
    "start" : 1711672646113,
    "stop" : 1711672646113,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'bool' object is not subscriptable",
  "statusTrace" : "@pytest.fixture(scope='function',autouse=True)\n    def seller_login():\n        # 登录\n        sellerloginapi = LoginApi()\n        sellerloginapi.send()\n        # 数据提取\n>       BuyerBaseApi.token = sellerloginapi.extract_expr('$.data.token')\n\nconftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <apiframework.api.buyer.login_api.LoginApi object at 0x0000000017B22EF0>\njsonpath_express = '$.data.token', index = 0\n\n    def extract_expr(self, jsonpath_express, index=0):\n        '''\n    \n        :param index: 代表想要获取目标结果中的第几个数据\n        index=0  默认获取第一个数据\n        index=1,2... 正常的索引值的获取\n        index=-1      想要获取所有的数据，返回一个列表\n        :return:\n        '''\n    \n        if self.resp != None and self.resp != '':\n            if index >= 0:\n>               extract_data = jsonpath.jsonpath(self.resp.json(), jsonpath_express)[index]\nE               TypeError: 'bool' object is not subscriptable\n\ncommon\\client.py:72: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1711672646116,
      "stop" : 1711672646536,
      "duration" : 420
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "seller_login",
    "time" : {
      "start" : 1711672646536,
      "stop" : 1711672646624,
      "duration" : 88
    },
    "status" : "broken",
    "statusMessage" : "TypeError: 'bool' object is not subscriptable\n",
    "statusTrace" : "  File \"F:\\Python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"F:\\Python\\lib\\site-packages\\_pytest\\fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"F:\\Python\\lib\\site-packages\\_pytest\\fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"F:\\pythonProject\\apiframework\\conftest.py\", line 49, in seller_login\n    BuyerBaseApi.token = sellerloginapi.extract_expr('$.data.token')\n  File \"F:\\pythonProject\\apiframework\\common\\client.py\", line 72, in extract_expr\n    extract_data = jsonpath.jsonpath(self.resp.json(), jsonpath_express)[index]\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'bool' object is not subscriptable",
    "statusTrace" : "@pytest.fixture(scope='function',autouse=True)\n    def seller_login():\n        # 登录\n        sellerloginapi = LoginApi()\n        sellerloginapi.send()\n        # 数据提取\n>       BuyerBaseApi.token = sellerloginapi.extract_expr('$.data.token')\n\nconftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <apiframework.api.buyer.login_api.LoginApi object at 0x0000000017B22EF0>\njsonpath_express = '$.data.token', index = 0\n\n    def extract_expr(self, jsonpath_express, index=0):\n        '''\n    \n        :param index: 代表想要获取目标结果中的第几个数据\n        index=0  默认获取第一个数据\n        index=1,2... 正常的索引值的获取\n        index=-1      想要获取所有的数据，返回一个列表\n        :return:\n        '''\n    \n        if self.resp != None and self.resp != '':\n            if index >= 0:\n>               extract_data = jsonpath.jsonpath(self.resp.json(), jsonpath_express)[index]\nE               TypeError: 'bool' object is not subscriptable\n\ncommon\\client.py:72: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "49ab983160b56a15",
      "name" : "log",
      "source" : "49ab983160b56a15.txt",
      "type" : "text/plain",
      "size" : 862
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "keywords"
  }, {
    "name" : "suite",
    "value" : "test_run"
  }, {
    "name" : "host",
    "value" : "WINDOWS-B7G8EFK"
  }, {
    "name" : "thread",
    "value" : "43064-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "keywords.test_run"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "casename",
    "value" : "'获取商品接口'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a94d86007ca4503c.json",
  "parameterValues" : [ "'获取商品接口'" ]
}